{"version":3,"sources":["webpack:///./src/interfaces/key-value/input.vue?b263","webpack:///src/interfaces/key-value/input.vue","webpack:///./src/interfaces/key-value/input.vue?5522","webpack:///./src/interfaces/key-value/input.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","name","id","formattedValue","length","readonly","required","repeaterOptions","newItem","relation","fields","collection","values","on","emitValue","staticRenderFns","mixins","computed","value","Object","keys","map","methods","$emit","forEach","component","module","exports","props","type","String","default","Number","Boolean","options","width","val","includes"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,WAAW,KAAO,OAAO,KAAON,EAAIO,KAAK,aAAaP,EAAIQ,GAAG,MAAQR,EAAIS,eAAe,OAAST,EAAIU,OAAO,SAAWV,EAAIW,SAAS,SAAWX,EAAIY,SAAS,QAAUZ,EAAIa,gBAAgB,WAAWb,EAAIc,QAAQ,SAAWd,EAAIe,SAAS,OAASf,EAAIgB,OAAO,WAAahB,EAAIiB,WAAW,OAASjB,EAAIkB,OAAO,MAAQ,QAAQC,GAAG,CAAC,MAAQnB,EAAIoB,cACvcC,EAAkB,G,2CCuBtB,GACEC,OAAQ,CAAC,EAAX,GACEC,SAAU,CACRV,gBADJ,WAEM,MAAO,CACLG,OAAQ,CAChB,CACU,MAAV,MACU,UAAV,0BACU,QAAV,wBACU,KAAV,qBACU,MAAV,QAEA,CACU,MAAV,QACU,UAAV,4BACU,QAAV,0BACU,KAAV,uBACU,MAAV,WAKIP,eArBJ,WAqBA,WACM,OAAmB,OAAfR,KAAKuB,MAAuB,KAEzBC,OAAOC,KAAKzB,KAAKuB,OAAOG,KAAI,SAAzC,UACA,MACA,uBAIEC,QAAS,CACPR,UADJ,SACA,GACM,GAAc,OAAVI,EACFvB,KAAK4B,MAAM,QAAS,UAC5B,CACQ,IAAR,KACQL,EAAMM,SAAQ,SAAtB,0CACQ7B,KAAK4B,MAAM,QAASpB,OC/DkU,I,YCO1VsB,EAAY,eACd,EACAhC,EACAsB,GACA,EACA,KACA,KACA,MAIa,aAAAU,E,8BClBfC,EAAOC,QAAU,CACfC,MAAO,CAIL1B,GAAI,CACF2B,KAAMC,OACNxB,UAAU,GAGZL,KAAM,CACJ4B,KAAMC,OACNxB,UAAU,GAIZY,MAAO,CACLW,KAAM,KACNE,QAAS,MAGXF,KAAM,CACJA,KAAMC,OACNxB,UAAU,GAGZF,OAAQ,CACNyB,KAAM,CAACC,OAAQE,QACfD,QAAS,MAGX1B,SAAU,CACRwB,KAAMI,QACNF,SAAS,GAGXpB,WAAY,CACVkB,KAAMC,OACNC,QAAS,MAGXzB,SAAU,CACRuB,KAAMI,QACNF,SAAS,GAGXG,QAAS,CACPL,KAAMV,OACNY,QAAS,KAAM,KAGjBvB,QAAS,CACPqB,KAAMI,QACNF,SAAS,GAIXtB,SAAU,CACRoB,KAAMV,OACNY,QAAS,MAGXrB,OAAQ,CACNmB,KAAMV,OACNY,QAAS,MAIXnB,OAAQ,CACNiB,KAAMV,OACNY,QAAS,MAEXI,MAAO,CACLN,KAAMC,OACNC,QAAS,KACT,UAAUK,GACR,MAAO,CACL,OACA,YACA,aACA,OACA,QACAC,SAASD","file":"js/chunk-3bcec2c4.d04d6b59.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-ext-input',{attrs:{\"id\":\"repeater\",\"type\":\"json\",\"name\":_vm.name,\"input-name\":_vm.id,\"value\":_vm.formattedValue,\"length\":_vm.length,\"readonly\":_vm.readonly,\"required\":_vm.required,\"options\":_vm.repeaterOptions,\"new-item\":_vm.newItem,\"relation\":_vm.relation,\"fields\":_vm.fields,\"collection\":_vm.collection,\"values\":_vm.values,\"width\":\"full\"},on:{\"input\":_vm.emitValue}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-ext-input\n    id=\"repeater\"\n    type=\"json\"\n    :name=\"name\"\n    :input-name=\"id\"\n    :value=\"formattedValue\"\n    :length=\"length\"\n    :readonly=\"readonly\"\n    :required=\"required\"\n    :options=\"repeaterOptions\"\n    :new-item=\"newItem\"\n    :relation=\"relation\"\n    :fields=\"fields\"\n    :collection=\"collection\"\n    :values=\"values\"\n    width=\"full\"\n    @input=\"emitValue\"\n  />\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\n\nexport default {\n  mixins: [mixin],\n  computed: {\n    repeaterOptions() {\n      return {\n        fields: [\n          {\n            field: \"key\",\n            interface: this.options.keyInterface,\n            options: this.options.keyOptions,\n            type: this.options.keyType,\n            width: \"half\"\n          },\n          {\n            field: \"value\",\n            interface: this.options.valueInterface,\n            options: this.options.valueOptions,\n            type: this.options.valueType,\n            width: \"half\"\n          }\n        ]\n      };\n    },\n    formattedValue() {\n      if (this.value === null) return null;\n\n      return Object.keys(this.value).map(key => ({\n        key,\n        value: this.value[key]\n      }));\n    }\n  },\n  methods: {\n    emitValue(value) {\n      if (value === null) {\n        this.$emit(\"input\", null);\n      } else {\n        const formattedValue = {};\n        value.forEach(({ key, value }) => (formattedValue[key] = value));\n        this.$emit(\"input\", formattedValue);\n      }\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=eda947a4&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    },\n    width: {\n      type: String,\n      default: null,\n      validator(val) {\n        return [\n          'half',\n          'half-left',\n          'half-right',\n          'full',\n          'fill'\n        ].includes(val);\n      }\n    }\n  }\n};\n"],"sourceRoot":""}