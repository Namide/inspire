{"version":3,"sources":["webpack:///./src/interfaces/one-to-many/input.vue?5a65","webpack:///src/interfaces/one-to-many/input.vue","webpack:///./src/interfaces/one-to-many/input.vue?2156","webpack:///./src/interfaces/one-to-many/input.vue","webpack:///./src/interfaces/one-to-many/input.vue?c131","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","relationshipSetup","attrs","_v","_s","$t","items","on","toggleManualSort","manualSortActive","_e","_l","field","key","$event","changeSort","$helpers","formatField","collection","sort","asc","class","dragging","readonly","sortable","model","value","callback","$$v","itemsSorted","expression","item","relatedPrimaryKeyField","startEdit","disabled","interface","type","relation","datatype","options","String","startsWith","stopPropagation","deleteItem","startAddNewItem","selectExisting","visibleFieldNames","collection_many","stagedSelection","selectionPrimaryKeys","stageSelection","closeSelection","cancelSelection","addNew","save","text","color","closeEditItem","saveEditItem","relatedCollectionFields","editItem","stageValue","staticRenderFns","name","mixins","data","loading","error","initialValue","_","cloneDeep","computed","visibleFields","fields","Array","isArray","map","split","recursiveKey","fieldInfo","toLowerCase","Object","values","relatedFields","find","sortField","mapValues","clone","manyToManyField","get","orderBy","set","newValue","watch","oldValue","emitValue","created","length","methods","fieldName","defaults","hasOwnProperty","tempKey","$set","edits","pop","primaryKeys","filter","$emit","component","module","exports","props","id","required","default","Number","Boolean","newItem","width","val","includes"],"mappings":"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","file":"js/chunk-430929ee.b37f4741.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"interface-one-to-many\"},[(_vm.relationshipSetup === false)?_c('v-notice',{attrs:{\"color\":\"warning\",\"icon\":\"warning\"}},[_vm._v(\"\\n    \"+_vm._s(_vm.$t(\"relationship_not_setup\"))+\"\\n  \")]):[(_vm.items.length)?_c('div',{staticClass:\"table\"},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"row\"},[(_vm.sortable)?_c('button',{staticClass:\"sort-column\",on:{\"click\":_vm.toggleManualSort}},[_c('v-icon',{attrs:{\"name\":\"sort\",\"size\":\"18\",\"color\":_vm.manualSortActive ? 'action' : 'blue-grey-300'}})],1):_vm._e(),_vm._l((_vm.visibleFields),function(field){return _c('button',{key:field.field,attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.changeSort(field.field)}}},[_vm._v(\"\\n            \"+_vm._s(_vm.$helpers.formatField(field.field, field.collection))+\"\\n            \"),(_vm.sort.field === field.field)?_c('v-icon',{attrs:{\"name\":_vm.sort.asc ? 'arrow_downward' : 'arrow_upward',\"size\":\"16\"}}):_vm._e()],1)})],2)]),_c('draggable',{staticClass:\"body\",class:{ dragging: _vm.dragging, readonly: _vm.readonly },attrs:{\"handle\":\".drag-handle\",\"disabled\":!_vm.sortable || !_vm.manualSortActive},on:{\"start\":function($event){_vm.dragging = true},\"end\":function($event){_vm.dragging = false}},model:{value:(_vm.itemsSorted),callback:function ($$v) {_vm.itemsSorted=$$v},expression:\"itemsSorted\"}},_vm._l((_vm.itemsSorted),function(item){return _c('div',{key:item[_vm.relatedPrimaryKeyField],staticClass:\"row\",on:{\"click\":function($event){return _vm.startEdit(item[_vm.relatedPrimaryKeyField])}}},[(_vm.sortable)?_c('div',{staticClass:\"sort-column\",class:{ disabled: !_vm.manualSortActive }},[(!_vm.readonly)?_c('v-icon',{staticClass:\"drag-handle\",attrs:{\"name\":\"drag_handle\"}}):_vm._e()],1):_vm._e(),_vm._l((_vm.visibleFields),function(field){return _c('div',{key:field.field,staticClass:\"field-preview\"},[_c('v-ext-display',{attrs:{\"interface-type\":field.interface,\"name\":field.field,\"type\":field.type,\"collection\":field.collection,\"relation\":field.relation,\"datatype\":field.datatype,\"options\":field.options,\"value\":String(item[field.field]).startsWith('$temp_') ? null : item[field.field]}})],1)}),(!_vm.readonly)?_c('button',{staticClass:\"remove\",on:{\"click\":function($event){$event.stopPropagation();return _vm.deleteItem(item[_vm.relatedPrimaryKeyField])}}},[_c('v-icon',{attrs:{\"name\":\"close\"}})],1):_vm._e()],2)}),0)],1):_c('v-notice',[_vm._v(_vm._s(_vm.$t(\"no_items_selected\")))]),(!_vm.readonly)?_c('div',{staticClass:\"buttons\"},[(_vm.options.allow_create)?_c('v-button',{attrs:{\"type\":\"button\",\"disabled\":_vm.readonly,\"icon\":\"add\"},on:{\"click\":_vm.startAddNewItem}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"add_new\"))+\"\\n      \")]):_vm._e(),(_vm.options.allow_select)?_c('v-button',{attrs:{\"type\":\"button\",\"disabled\":_vm.readonly,\"icon\":\"playlist_add\"},on:{\"click\":function($event){_vm.selectExisting = true}}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"select_existing\"))+\"\\n      \")]):_vm._e()],1):_vm._e()],(_vm.selectExisting)?_c('v-item-select',{attrs:{\"fields\":_vm.visibleFieldNames,\"collection\":_vm.relation.collection_many.collection,\"filters\":[],\"value\":_vm.stagedSelection || _vm.selectionPrimaryKeys},on:{\"input\":_vm.stageSelection,\"done\":_vm.closeSelection,\"cancel\":_vm.cancelSelection}}):_vm._e(),(_vm.editItem)?_c('portal',{attrs:{\"to\":\"modal\"}},[_c('v-modal',{attrs:{\"title\":_vm.addNew ? _vm.$t('creating_item') : _vm.$t('editing_item'),\"buttons\":{\n        save: {\n          text: _vm.$t('save'),\n          color: 'accent'\n        }\n      }},on:{\"close\":_vm.closeEditItem,\"save\":_vm.saveEditItem}},[_c('div',{staticClass:\"edit-modal-body\"},[_c('v-form',{attrs:{\"new-item\":\"\",\"fields\":_vm.relatedCollectionFields,\"collection\":_vm.relation.collection_many.collection,\"values\":_vm.editItem},on:{\"stage-value\":_vm.stageValue}})],1)])],1):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"interface-one-to-many\">\n    <v-notice v-if=\"relationshipSetup === false\" color=\"warning\" icon=\"warning\">\n      {{ $t(\"relationship_not_setup\") }}\n    </v-notice>\n\n    <template v-else>\n      <div v-if=\"items.length\" class=\"table\">\n        <div class=\"header\">\n          <div class=\"row\">\n            <button v-if=\"sortable\" class=\"sort-column\" @click=\"toggleManualSort\">\n              <v-icon\n                name=\"sort\"\n                size=\"18\"\n                :color=\"manualSortActive ? 'action' : 'blue-grey-300'\"\n              />\n            </button>\n            <button\n              v-for=\"field in visibleFields\"\n              :key=\"field.field\"\n              type=\"button\"\n              @click=\"changeSort(field.field)\"\n            >\n              {{ $helpers.formatField(field.field, field.collection) }}\n              <v-icon\n                v-if=\"sort.field === field.field\"\n                :name=\"sort.asc ? 'arrow_downward' : 'arrow_upward'\"\n                size=\"16\"\n              />\n            </button>\n          </div>\n        </div>\n        <draggable\n          v-model=\"itemsSorted\"\n          class=\"body\"\n          handle=\".drag-handle\"\n          :disabled=\"!sortable || !manualSortActive\"\n          :class=\"{ dragging, readonly }\"\n          @start=\"dragging = true\"\n          @end=\"dragging = false\"\n        >\n          <div\n            v-for=\"item in itemsSorted\"\n            :key=\"item[relatedPrimaryKeyField]\"\n            class=\"row\"\n            @click=\"startEdit(item[relatedPrimaryKeyField])\"\n          >\n            <div v-if=\"sortable\" class=\"sort-column\" :class=\"{ disabled: !manualSortActive }\">\n              <v-icon v-if=\"!readonly\" name=\"drag_handle\" class=\"drag-handle\" />\n            </div>\n            <div v-for=\"field in visibleFields\" :key=\"field.field\" class=\"field-preview\">\n              <v-ext-display\n                :interface-type=\"field.interface\"\n                :name=\"field.field\"\n                :type=\"field.type\"\n                :collection=\"field.collection\"\n                :relation=\"field.relation\"\n                :datatype=\"field.datatype\"\n                :options=\"field.options\"\n                :value=\"String(item[field.field]).startsWith('$temp_') ? null : item[field.field]\"\n              />\n            </div>\n            <button\n              v-if=\"!readonly\"\n              class=\"remove\"\n              @click.stop=\"deleteItem(item[relatedPrimaryKeyField])\"\n            >\n              <v-icon name=\"close\" />\n            </button>\n          </div>\n        </draggable>\n      </div>\n      <v-notice v-else>{{ $t(\"no_items_selected\") }}</v-notice>\n\n      <div v-if=\"!readonly\" class=\"buttons\">\n        <v-button\n          v-if=\"options.allow_create\"\n          type=\"button\"\n          :disabled=\"readonly\"\n          icon=\"add\"\n          @click=\"startAddNewItem\"\n        >\n          {{ $t(\"add_new\") }}\n        </v-button>\n\n        <v-button\n          v-if=\"options.allow_select\"\n          type=\"button\"\n          :disabled=\"readonly\"\n          icon=\"playlist_add\"\n          @click=\"selectExisting = true\"\n        >\n          {{ $t(\"select_existing\") }}\n        </v-button>\n      </div>\n    </template>\n\n    <v-item-select\n      v-if=\"selectExisting\"\n      :fields=\"visibleFieldNames\"\n      :collection=\"relation.collection_many.collection\"\n      :filters=\"[]\"\n      :value=\"stagedSelection || selectionPrimaryKeys\"\n      @input=\"stageSelection\"\n      @done=\"closeSelection\"\n      @cancel=\"cancelSelection\"\n    />\n\n    <portal v-if=\"editItem\" to=\"modal\">\n      <v-modal\n        :title=\"addNew ? $t('creating_item') : $t('editing_item')\"\n        :buttons=\"{\n          save: {\n            text: $t('save'),\n            color: 'accent'\n          }\n        }\"\n        @close=\"closeEditItem\"\n        @save=\"saveEditItem\"\n      >\n        <div class=\"edit-modal-body\">\n          <v-form\n            new-item\n            :fields=\"relatedCollectionFields\"\n            :collection=\"relation.collection_many.collection\"\n            :values=\"editItem\"\n            @stage-value=\"stageValue\"\n          />\n        </div>\n      </v-modal>\n    </portal>\n  </div>\n</template>\n\n<script>\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\nimport shortid from \"shortid\";\nimport { diff } from \"deep-object-diff\";\n\nexport default {\n  name: \"InterfaceOneToMany\",\n  mixins: [mixin],\n  data() {\n    return {\n      sort: {\n        field: null,\n        asc: true\n      },\n\n      selectExisting: false,\n      editItem: false,\n      addNew: null,\n\n      dragging: false,\n\n      items: null,\n      loading: false,\n      error: null,\n      stagedSelection: null,\n      initialValue: _.cloneDeep(this.value) || []\n    };\n  },\n\n  computed: {\n    relationshipSetup() {\n      if (!this.relation) return false;\n      return true;\n    },\n\n    visibleFields() {\n      if (this.relationshipSetup === false) return [];\n\n      const relatedFields = this.relation.collection_many.fields;\n      const recursiveKey = this.relation.field_many.field;\n\n      if (!this.options.fields) {\n        return Object.values(relatedFields)\n          .filter(field => field.hidden_browse !== true)\n          .filter(field => {\n            if (recursiveKey && field.field === recursiveKey) return false;\n            return true;\n          })\n          .slice(0, 2);\n      }\n\n      let visibleFieldNames;\n\n      if (Array.isArray(this.options.fields)) {\n        visibleFieldNames = this.options.fields.map(val => val.trim());\n      }\n\n      visibleFieldNames = this.options.fields.split(\",\").map(val => val.trim());\n\n      return visibleFieldNames.map(name => {\n        const fieldInfo = relatedFields[name];\n\n        if (recursiveKey && name === recursiveKey) {\n          fieldInfo.readonly = true;\n        }\n\n        let relation = null;\n\n        if (fieldInfo.type.toLowerCase() === \"m2o\") {\n          relation = this.$store.getters.m2o(fieldInfo.collection, fieldInfo.field);\n        }\n\n        if (fieldInfo.type.toLowerCase() === \"o2m\") {\n          relation = this.$store.getters.o2m(fieldInfo.collection, fieldInfo.field);\n        }\n\n        if (fieldInfo.type.toLowerCase() === \"translation\") {\n          relation = this.$store.getters.o2m(fieldInfo.collection, fieldInfo.field);\n        }\n\n        fieldInfo.relation = relation;\n\n        return fieldInfo;\n      });\n    },\n\n    visibleFieldNames() {\n      return this.visibleFields.map(field => field.field);\n    },\n\n    relatedPrimaryKeyField() {\n      return _.find(this.relation.collection_many.fields, { primary_key: true }).field;\n    },\n\n    selectionPrimaryKeys() {\n      return this.items.map(item => item[this.relatedPrimaryKeyField]);\n    },\n\n    sortField() {\n      const sortField = this.options.sort_field;\n\n      if (!sortField) {\n        return null;\n      }\n\n      return _.find(this.relation.collection_many.fields, { field: sortField });\n    },\n\n    sortable() {\n      return !!this.sortField;\n    },\n\n    manualSortActive() {\n      return this.sort.field === \"$manual\";\n    },\n\n    relatedCollectionFields() {\n      const relatedCollectionFields = this.relation.collection_many.fields;\n\n      // Disable editing the many to one that points to this one to many\n      const manyToManyField = this.relation.field_many && this.relation.field_many.field;\n\n      return _.mapValues(relatedCollectionFields, field => {\n        const clone = _.clone(field);\n\n        if (clone.field === manyToManyField) {\n          clone.readonly = true;\n        }\n\n        return clone;\n      });\n    },\n\n    itemsSorted: {\n      get() {\n        if (this.sort.field === \"$manual\") {\n          return _.orderBy(\n            _.cloneDeep(this.items),\n            item => item[this.sortField.field],\n            this.sort.asc ? \"asc\" : \"desc\"\n          );\n        }\n\n        return _.orderBy(\n          _.cloneDeep(this.items),\n          item => item[this.sort.field],\n          this.sort.asc ? \"asc\" : \"desc\"\n        );\n      },\n      set(newValue) {\n        this.items = newValue.map((item, index) => {\n          return {\n            ...item,\n            [this.sortField.field]: index + 1\n          };\n        });\n      }\n    }\n  },\n  watch: {\n    items(value, oldValue) {\n      // When oldvalue is null, it's the very first load\n      if (oldValue === null) return;\n      this.emitValue(value);\n    }\n  },\n\n  created() {\n    if (this.sortable) {\n      this.sort.field = \"$manual\";\n    } else {\n      if (this.visibleFieldNames && this.visibleFieldNames.length > 0) {\n        this.sort.field = this.visibleFieldNames[0];\n      }\n    }\n\n    this.items = _.cloneDeep(this.value) || [];\n  },\n\n  methods: {\n    changeSort(fieldName) {\n      if (this.sort.field === fieldName) {\n        this.sort.asc = !this.sort.asc;\n        return;\n      }\n\n      this.sort.asc = true;\n      this.sort.field = fieldName;\n      return;\n    },\n\n    toggleManualSort() {\n      this.sort.field = \"$manual\";\n      this.sort.asc = true;\n    },\n\n    startAddNewItem() {\n      this.addNew = true;\n\n      const relatedCollectionFields = this.relation.collection_many.fields;\n      const defaults = _.mapValues(relatedCollectionFields, field => field.default_value);\n      const manyToManyField = this.relation.field_many && this.relation.field_many.field;\n      const tempKey = \"$temp_\" + shortid.generate();\n\n      if (defaults.hasOwnProperty(this.relatedPrimaryKeyField)) {\n        delete defaults[this.relatedPrimaryKeyField];\n      }\n\n      if (defaults.hasOwnProperty(manyToManyField)) {\n        delete defaults[manyToManyField];\n      }\n\n      this.items = [\n        ...this.items,\n        {\n          [this.relatedPrimaryKeyField]: tempKey,\n          ...defaults\n        }\n      ];\n\n      this.startEdit(tempKey);\n    },\n\n    stageValue({ field, value }) {\n      this.$set(this.editItem, field, value);\n    },\n\n    async startEdit(primaryKey) {\n      let values = _.cloneDeep(this.items.find(i => i[this.relatedPrimaryKeyField] === primaryKey));\n\n      const isNewItem = typeof primaryKey === \"string\" && primaryKey.startsWith(\"$temp_\");\n\n      if (isNewItem === false) {\n        const collection = this.relation.collection_many.collection;\n        const res = await this.$api.getItem(collection, primaryKey, { fields: \"*.*.*\" });\n        const item = res.data;\n\n        values = _.merge({}, item, values);\n      }\n\n      this.editItem = values;\n    },\n\n    saveEditItem() {\n      const primaryKey = this.editItem[this.relatedPrimaryKeyField];\n\n      const manyToManyField = this.relation.field_many && this.relation.field_many.field;\n\n      this.items = this.items.map(item => {\n        if (item[this.relatedPrimaryKeyField] === primaryKey) {\n          const edits = _.clone(this.editItem);\n\n          // Make sure we remove the many to one field that points to this o2m to prevent this nested item\n          // to be accidentally assigned to another parent\n          if (edits.hasOwnProperty(manyToManyField)) {\n            delete edits[manyToManyField];\n          }\n\n          return edits;\n        }\n\n        return item;\n      });\n\n      this.editItem = null;\n    },\n\n    closeEditItem() {\n      //If addNew is true and cancel is clicked, need to remove a last added blank item.\n      if (this.addNew) {\n        this.items.pop();\n      }\n      this.addNew = false;\n      this.editItem = null;\n    },\n\n    stageSelection(primaryKeys) {\n      this.stagedSelection = primaryKeys;\n    },\n\n    async closeSelection() {\n      //When there is no change in selection and user click on done.\n      if (!this.stagedSelection) {\n        this.selectExisting = false;\n        return;\n      }\n\n      const primaryKeys = this.stagedSelection || [];\n\n      // Remove all the items from this.items that aren't selected anymore\n      this.items = this.items.filter(item => {\n        const primaryKey = item[this.relatedPrimaryKeyField];\n        return primaryKeys.includes(primaryKey);\n      });\n\n      // Fetch all newly selected items so we can render them in the table\n      const itemPrimaryKeys = this.items.map(item => item[this.relatedPrimaryKeyField]);\n      const newlyAddedItems = _.difference(primaryKeys, itemPrimaryKeys);\n\n      if (newlyAddedItems.length > 0) {\n        const res = await this.$api.getItem(\n          this.relation.collection_many.collection,\n          newlyAddedItems.join(\",\"),\n          {\n            fields: \"*.*.*\"\n          }\n        );\n\n        const items = Array.isArray(res.data) ? res.data : [res.data];\n\n        this.items = [...this.items, ...items];\n      }\n      this.stagedSelection = null;\n      this.selectExisting = false;\n    },\n\n    cancelSelection() {\n      this.stagedSelection = null;\n      this.selectExisting = false;\n    },\n\n    deleteItem(primaryKey) {\n      this.items = this.items.filter(item => item[this.relatedPrimaryKeyField] !== primaryKey);\n    },\n\n    emitValue(value) {\n      value = _.cloneDeep(value);\n\n      const recursiveKey = this.relation.field_many.field;\n\n      const newValue = value\n        .map(after => {\n          const primaryKey = after[this.relatedPrimaryKeyField];\n\n          const before = this.initialValue.find(i => i[this.relatedPrimaryKeyField] === primaryKey);\n\n          if (before) {\n            const delta = diff(before, after);\n\n            // For every nested field, we only want to stage the changed values, hence the delta above\n            // HOWEVER, there is one field type where we _don't_ want to only save the changes: JSON\n            // For a nested JSON record, we want to save the whole new state of the object, instead of\n            // just the values that changed, seeing it will override the saved value with a new Object\n            // only containing the changes.\n            // In order to achieve that, we'll loop over every key in the delta, and use the \"full\"\n            // after value in case the delta field is a JSON type\n            _.forEach(delta, (value, key) => {\n              const fieldInfo = this.relatedCollectionFields[key];\n              if (!fieldInfo) return;\n\n              const type = fieldInfo.type.toLowerCase();\n\n              if (type === \"json\" || type === \"translation\" || type === \"array\") {\n                delta[key] = after[key];\n              } else if (type === \"translation\") {\n                delta[key] = after[key];\n              }\n            });\n\n            if (Object.keys(delta).length > 0) {\n              const newVal = {\n                [this.relatedPrimaryKeyField]: before[this.relatedPrimaryKeyField]\n              };\n\n              if (\n                recursiveKey &&\n                newVal[this.relatedPrimaryKeyField].hasOwnProperty(recursiveKey)\n              ) {\n                delete newVal[recursiveKey];\n              }\n\n              return _.merge({}, newVal, delta);\n            } else {\n              return null;\n            }\n          }\n\n          if (recursiveKey && after.hasOwnProperty(recursiveKey)) {\n            delete after[recursiveKey];\n          }\n\n          if (\n            typeof after[this.relatedPrimaryKeyField] === \"string\" &&\n            after[this.relatedPrimaryKeyField].startsWith(\"$temp_\")\n          ) {\n            delete after[this.relatedPrimaryKeyField];\n          }\n\n          return after;\n        })\n        .filter(i => i);\n\n      const savedPrimaryKeys = this.initialValue.map(item => item[this.relatedPrimaryKeyField]);\n      const newPrimaryKeys = value.map(item => item[this.relatedPrimaryKeyField]);\n      const deletedKeys = _.difference(savedPrimaryKeys, newPrimaryKeys);\n      const deletedRows = deletedKeys.map(key => {\n        if (this.options.delete_mode === \"relation\") {\n          return {\n            [this.relatedPrimaryKeyField]: key,\n            [recursiveKey]: null\n          };\n        }\n\n        return {\n          [this.relatedPrimaryKeyField]: key,\n          $delete: true\n        };\n      });\n      this.$emit(\"input\", [...newValue, ...deletedRows]);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.table {\n  background-color: var(--input-background-color);\n  border: var(--input-border-width) solid var(--input-border-color);\n  border-radius: var(--border-radius);\n  border-spacing: 0;\n  width: 100%;\n  margin: 16px 0 24px;\n\n  .header {\n    height: calc(var(--input-height) - 2px); // -2px since top border is on caontainer\n    border-bottom: var(--input-border-width) solid var(--input-border-color);\n    display: flex;\n    align-items: center;\n\n    button {\n      text-align: left;\n      font-weight: 500;\n      transition: color var(--fast) var(--transition);\n    }\n\n    i {\n      vertical-align: top;\n      color: var(--input-icon-color);\n    }\n  }\n\n  .row {\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    width: 100%;\n\n    > div {\n      padding: 3px 5px;\n      flex-basis: 200px;\n      max-width: 200px;\n    }\n  }\n\n  .header .row {\n    align-items: center;\n    height: 40px;\n\n    & > button {\n      padding: 3px 5px 2px;\n      flex-basis: 200px;\n      max-width: 200px;\n    }\n  }\n\n  .body {\n    max-height: 275px;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n\n    .row {\n      cursor: pointer;\n      position: relative;\n      height: 50px;\n      border-bottom: var(--input-border-width) solid var(--input-background-color-alt);\n\n      &:last-of-type {\n        border-bottom: none;\n      }\n\n      &:hover {\n        background-color: var(--highlight);\n      }\n\n      & div:last-of-type {\n        flex-grow: 1;\n      }\n\n      button {\n        color: var(--blue-grey-200);\n        transition: color var(--fast) var(--transition);\n\n        &:hover {\n          transition: none;\n          color: var(--danger);\n        }\n      }\n    }\n\n    &.readonly {\n      pointer-events: none;\n    }\n  }\n\n  .sort-column {\n    flex-basis: 36px !important;\n\n    &.disabled i {\n      color: var(--blue-grey-50);\n      cursor: not-allowed;\n    }\n  }\n}\n\n.drag-handle {\n  cursor: grab;\n}\n\n.dragging {\n  cursor: grabbing !important;\n}\n\n.buttons {\n  margin-top: 24px;\n}\n\n.buttons > * {\n  display: inline-block;\n}\n\n.buttons > *:first-child {\n  margin-right: 24px;\n}\n\n.edit-modal-body {\n  padding: 30px 30px 60px 30px;\n  background-color: var(--page-background-color);\n  .form {\n    grid-template-columns:\n      [start] minmax(0, var(--form-column-width)) [half] minmax(0, var(--form-column-width))\n      [full];\n  }\n}\n\n.remove {\n  position: absolute;\n  right: 10px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=6007a4c2&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=6007a4c2&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6007a4c2\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=6007a4c2&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=6007a4c2&lang=scss&scoped=true&\"","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    },\n    width: {\n      type: String,\n      default: null,\n      validator(val) {\n        return [\n          'half',\n          'half-left',\n          'half-right',\n          'full',\n          'fill'\n        ].includes(val);\n      }\n    }\n  }\n};\n"],"sourceRoot":""}